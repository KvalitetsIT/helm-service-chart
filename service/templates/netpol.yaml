{{- if .Values.netpol.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "service.fullname" . }}
  {{- if (.Values.namespace) }}
  namespace: {{ .Values.namespace  }}
  {{- end }}
spec:
  podSelector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Ingress
    - Egress
  {{- if (.Values.netpol.ingress) }}
  ingress:
  {{- end }}
  {{- range $key, $value := .Values.netpol.ingress }}
  #  {{ $key }}
  - from:
    {{- if ($value.namespaceSelector) }}
    - namespaceSelector:
        matchLabels:
    {{- end }}
          {{- range $netpolKey, $netpolValue := $value.namespaceSelector}}
          {{$netpolKey}}: {{$netpolValue}}
          {{- end }}
      {{- if ($value.podSelector) }}
      podSelector:
        matchLabels:
      {{- end }}
          {{- range $netpolKey, $netpolValue := $value.podSelector }}
          {{$netpolKey}}: {{$netpolValue}}
          {{- end }}
    {{- if ($value.ipBlock) }}
    - ipBlock:
        cidr: {{ $value.ipBlock }}
    {{- end }}
    {{- if ($value.ports) }}
    ports:
    {{- end }}
      {{- range $netpolKey, $netpolValue := $value.ports }}
      - protocol: {{$netpolValue}}
        port: {{$netpolKey}}
      {{- end }}
  {{- end }}
  {{- if (.Values.netpol.egress) }}
  egress:
  {{- end }}
  {{- range $key, $value := .Values.netpol.egress }}
  #  {{ $key }}
  - to:
      {{- if ($value.namespaceSelector) }}
    - namespaceSelector:
        matchLabels:
      {{- end }}
          {{- range $netpolKey, $netpolValue := $value.namespaceSelector }}
          {{$netpolKey}}: {{$netpolValue}}
          {{- end }}
      {{- if ($value.podSelector) }}
      podSelector:
        matchLabels:
      {{- end }}
          {{- range $netpolKey, $netpolValue := $value.podSelector }}
          {{$netpolKey}}: {{$netpolValue}}
          {{- end }}
    {{- if ($value.ipBlock) }}
    - ipBlock:
        cidr: {{ $value.ipBlock }}
    {{- end }}
    {{- if ($value.ports) }}
    ports:
    {{- end }}
      {{- range $netpolKey, $netpolValue := $value.ports }}
      - protocol: {{$netpolValue}}
        port: {{$netpolKey}}
      {{- end }}
  {{- end }}
{{- end }}
---
{{- if .Values.netpol.allowLetsEncrypt }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "service.fullname" . }}-lets-encrypt
  {{- if (.Values.namespace) }}
  namespace: {{ .Values.namespace  }}
  {{- end }}
spec:
  podSelector:
    matchLabels:
      acme.cert-manager.io/http01-solver: 'true'
  policyTypes:
    - Ingress
  ingress:
    - from:
      ports:
        - port: 8089
          protocol: TCP
{{- end }}